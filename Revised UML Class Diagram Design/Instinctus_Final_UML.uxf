<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<diagram program="umlet" version="14.2">
  <zoom_level>5</zoom_level>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>595</x>
      <y>155</y>
      <w>65</w>
      <h>85</h>
    </coordinates>
    <panel_attributes>Point
--
- x: int
- y: int
--
+ Point()
+ Point(int, int)
+ get_x(): int
+ get_y(): int
+ set_x(int): void
+ set_y(int): void
bg=cyan</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>75</x>
      <y>225</y>
      <w>80</w>
      <h>80</h>
    </coordinates>
    <panel_attributes>Route
--
- route: int
--
+ Route(int direction);
+ ~Route();
+ getList(): LinkedList 
+ get_on_route(Mobile*): void
+ move_all_cars(): void
+ move_signal(): void
+ TurnL(): void
+ render_all_cars(long int&amp;, SDL_Renderer*, bool): void
bg=red</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>450</x>
      <y>265</y>
      <w>80</w>
      <h>65</h>
    </coordinates>
    <panel_attributes>TrafficSignal
--
- float x;
- float y: float
- int width:int
- int height:int
- double angle = 0:double
- int state: int
- spriteClips[2]: SDL_Rect
- spriteSheetTexture: LTexture* 

--
+ TrafficSignal()
+ ~TrafficSignal()
+ signal_switch(): void

bg=orange</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>200</x>
      <y>350</y>
      <w>190</w>
      <h>90</h>
    </coordinates>
    <panel_attributes>Person
--
- gender: string
- LTexture* gSpriteSheetTexture
- SDL_Rect spriteClips;
- enum ANIMATION_FRAMES {WALKING_FRAMES = n}
- SDL_Rect spriteClips[ WALKING_FRAMES ]
--
+ Person()
+ ~Person()
+ get_gender(): string
+ set_gender(string): void
bg=light_gray</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>415</x>
      <y>335</y>
      <w>115</w>
      <h>120</h>
    </coordinates>
    <panel_attributes>Screen
--
#SpriteSheetDisplay: LTexture* 
# SDL_Rect spriteClips;
# point: Point
# Screen_width: int
# Screen_height: int
# Button* buttons: Button*
# gameover_buttons: Button*
--
+ Screen()
+ ~Screen()
+ Screen(LTexture*, int, int)
+ handleEvent(SDL_Event e, bool* mouseClicked, bool* quit):void
+ Render(SDL_Renderer* gRenderer, bool) = 0: virtual void


bg=yellow</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>540</x>
      <y>390</y>
      <w>100</w>
      <h>85</h>
    </coordinates>
    <panel_attributes>MainMenu
--
- SDL_Event e;
--
+ MainMenu(LTexture*, LTexture*, int, int)
+ MainMenu()
+ ~MainMenu()
+ Render(long int&amp; frame, SDL_Renderer* gRenderer, bool debug): void
+ text: string
+ p: Point
+ handle_event(SDL_Event, bool*, bool*, int*): void

bg=yellow</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>395</x>
      <y>485</y>
      <w>150</w>
      <h>120</h>
    </coordinates>
    <panel_attributes>Button
--
- int word_len;
- Point position;
- Word* word_object;
- int width;
- int height;
- SDL_Rect LeftButton;
- SDL_Rect RightButton;
- SDL_Rect CenterButton;

- LTexture* left_button;
- LTexture* right_button;
- LTexture* center_button;
- LTexture* spriteSheetTexture;
--
+ Button()
+ ~Button()
+ Button(LTexture*, float, float, string)
+ Render(SDL_Renderer* gRenderer, bool): void

bg=yellow</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>735</x>
      <y>215</y>
      <w>290</w>
      <h>315</h>
    </coordinates>
    <panel_attributes>PlayGame
--
- Mobile* car = NULL;
- Mobile* ambulance = NULL;
- Mobile* person = NULL;
- Mobile* truck = NULL;
- Mobile* motorcycle = NULL;
- Route* route_up;
- Route* route_left;
- Route* route_right;
- Route* route_down;
- word: Word*
- x: float
- y: float
- move_from_up: bool
- move_from_left: bool
- move_from_right: bool
- move_from_down: bool
- lights_route_up: TrafficSignal* 
- lights_route_down: TrafficSignal* 
-  lights_route_left: TrafficSignal* 
- lights_route_right: TrafficSignal* 
- health_check: HealthBar*
- score: int
- CarMaker(bool): void
--
+ PlayGame()
+ PlayGame(LTexture*, LTexture*, int, int): void
+ Update_signal( bool,bool,bool ,bool): void
+ getx(): float
+ gety(): float
+ make_signal(LTexture* signal_image): void
+ Render(long int&amp;, SDL_Renderer*, bool): void
+ make_new_mobile(LTexture*, LTexture*, LTexture*, LTexture*, LTexture*, long int&amp; ):void
+ int_to_string(int): string
+ set_score(): void
+ get_score(): int
+ ~PlayGame()
+ void generate_cars(LTexture &amp;gSpriteSheetCar,long int&amp; frame);

bg=yellow</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>180</x>
      <y>165</y>
      <w>155</w>
      <h>95</h>
    </coordinates>
    <panel_attributes>/Mobile/
--
# float x;
# float y;
# int width;
# int height;
# int turning_direction;
# int direction;
# car_turn_direction: int
# direction_truck: int
# direction_motorcycle: int
# direction_ambulance: int
# type: int
# angle: double
# crossed_signal: bool
# alive: bool
--
Mobile();
+ virtual ~Mobile();
+ Mobile(LTexture* image, float x, float y, double angle, int turning_direction);
+ GetWidth(): int
+ GetHeight(): int
+ GetX(): int
+ GetY(): int
+ getAngle(): int
+ Move(): void
+ Render(long int&amp; frame, SDL_Renderer* gRenderer, bool debug) = 0: virtual void
+ TurnRouteDown(): void
+ OutOfScreen(): bool
+ GetType():int
bg=pink</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>495</x>
      <y>195</y>
      <w>95</w>
      <h>65</h>
    </coordinates>
    <panel_attributes>Car
--
- spriteClips: SDL_Rect 
--
+ Car(LTexture* image, float x, float y,double angle, string color, int direction)
+ Car()
+ ~Car()
+ Move(): void
+ Render(long int&amp; frame, SDL_Renderer* gRenderer, bool debug): virtual void
bg=pink</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>500</x>
      <y>145</y>
      <w>85</w>
      <h>50</h>
    </coordinates>
    <panel_attributes>Truck
--
- SDL_Rect spriteClips;
--
+ Truck()
+ ~Truck()
+ Truck(LTexture* image, float x, float y,double angle, string color, int direction_truck)
+ Render(long int&amp; frame, SDL_Renderer* gRenderer, bool debug): vortual void
bg=pink</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>405</x>
      <y>140</y>
      <w>85</w>
      <h>55</h>
    </coordinates>
    <panel_attributes>Ambulance
--
- SDL_Rect spriteClips[ LIGHT_FRAMES ]
- health: HealthBar*
--
+ Ambulance()
+ ~Ambulance()
+ Render(long int&amp; frame, SDL_Renderer* gRenderer, bool debug):virtual void 
bg=pink</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>330</x>
      <y>140</y>
      <w>85</w>
      <h>50</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;80.0;130.0;80.0;130.0;10.0;150.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>150</x>
      <y>240</y>
      <w>310</w>
      <h>55</h>
    </coordinates>
    <panel_attributes>lt=-
</panel_attributes>
    <additional_attributes>10.0;10.0;40.0;10.0;40.0;50.0;560.0;50.0;560.0;90.0;600.0;90.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>330</x>
      <y>175</y>
      <w>180</w>
      <h>30</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;40.0;330.0;40.0;330.0;10.0;340.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>330</x>
      <y>200</y>
      <w>175</w>
      <h>15</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;330.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>315</x>
      <y>135</y>
      <w>290</w>
      <h>55</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;-
bg=black</panel_attributes>
    <additional_attributes>10.0;60.0;10.0;10.0;540.0;10.0;540.0;90.0;560.0;90.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>220</x>
      <y>455</y>
      <w>155</w>
      <h>155</h>
    </coordinates>
    <panel_attributes>Word
--
- Point position
- string characters
- int word_length
- Character* char_pointer
- int width
- int height
- SDL_Rect spriteClips
- LTexture* spriteSheetTexture
--
+ Word();
+ Word(LTexture*, float, float, string);
+ ~Word();
+ SetChar(string): void
+ Render(SDL_Renderer* gRenderer, bool): void
+ SetPosition(float, float): void
+ GetFrameWidth(): void
+ GetFrameHeight(): void

bg=yellow</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>45</x>
      <y>455</y>
      <w>155</w>
      <h>130</h>
    </coordinates>
    <panel_attributes>Character
--
- Point position
- int character_value
- int width
- int height
- SDL_Rect spriteClips
- LTexture* spriteSheetTexture
--
+ Character()
+ Character(LTexture*, float, float, char)
+ ~Character();
+ Render(SDL_Renderer* gRenderer, bool): void
+ set_osition(float, float): void
+ get_frame_width(): int
+ get_frame_height(): int

bg=yellow</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>330</x>
      <y>225</y>
      <w>25</w>
      <h>15</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;30.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>525</x>
      <y>435</y>
      <w>25</w>
      <h>15</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;30.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>545</x>
      <y>305</y>
      <w>115</w>
      <h>50</h>
    </coordinates>
    <panel_attributes>GameOver
--
- p: Point
--
+ GameOver()
+ GameOver (LTexture*, int, int)
+ Render(long int&amp;, SDL_Renderer*, bool): void

bg=yellow</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>715</x>
      <y>70</y>
      <w>345</w>
      <h>130</h>
    </coordinates>
    <panel_attributes>L Texture
--
- texture: SDL_Texture
- int width
- int height
--
+ LTexture();
+ ~LTexture();
+ bool LoadFromFile( std::string path, SDL_Renderer* gRenderer );
+ void Free();   
+ void SetColor( Uint8 red, Uint8 green, Uint8 blue );
+ void SetBlendMode( SDL_BlendMode blending );
+ void SetAlpha( Uint8 alpha );
+ void Render( int, int, SDL_Rect* clip = NULL, double angle = 0.0, SDL_Point* center = NULL, SDL_RendererFlip flip = SDL_FLIP_NONE, SDL_Renderer* gRenderer = NULL);
+ int GetWidth();
+ int GetHeight();
bg=magenta</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>525</x>
      <y>110</y>
      <w>150</w>
      <h>270</h>
    </coordinates>
    <panel_attributes>lt=&lt;-</panel_attributes>
    <additional_attributes>10.0;520.0;280.0;520.0;280.0;10.0;250.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>35</x>
      <y>175</y>
      <w>175</w>
      <h>200</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>290.0;10.0;10.0;10.0;10.0;380.0;330.0;380.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>35</x>
      <y>435</y>
      <w>195</w>
      <h>80</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;-
bg=black</panel_attributes>
    <additional_attributes>370.0;140.0;340.0;140.0;340.0;10.0;10.0;10.0;10.0;130.0;20.0;130.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>205</x>
      <y>440</y>
      <w>200</w>
      <h>70</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;-
fg=black
bg=black</panel_attributes>
    <additional_attributes>380.0;120.0;350.0;120.0;350.0;10.0;10.0;10.0;10.0;70.0;30.0;70.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>60</x>
      <y>75</y>
      <w>95</w>
      <h>95</h>
    </coordinates>
    <panel_attributes>_LinkedList_
--
- head: Node*
- tail: Node*
- size = 0: int
--
+ LinkedList()
+ ~LinkedList()
+ Enqueue(Mobile*): void
+ TurnRouteDown(): void
+ Render(long int&amp; frame, SDL_Renderer* gRenderer, bool debug): void
+ linkedlist_move_signal(): void
+ Move(): void
+ getSize(): int
bg=red</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>180</x>
      <y>80</y>
      <w>55</w>
      <h>40</h>
    </coordinates>
    <panel_attributes>_Node_
--
+ next: Node*
+ prev: Node*
+ data: Mobile*

bg=red</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>45</x>
      <y>140</y>
      <w>40</w>
      <h>110</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;-</panel_attributes>
    <additional_attributes>60.0;200.0;10.0;200.0;10.0;10.0;30.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>150</x>
      <y>100</y>
      <w>40</w>
      <h>15</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;-
bg=none</panel_attributes>
    <additional_attributes>10.0;10.0;60.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>175</x>
      <y>115</y>
      <w>30</w>
      <h>60</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;-
bg=black</panel_attributes>
    <additional_attributes>40.0;100.0;40.0;10.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>525</x>
      <y>375</y>
      <w>220</w>
      <h>15</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;420.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>490</x>
      <y>30</y>
      <w>160</w>
      <h>100</h>
    </coordinates>
    <panel_attributes>HealthBar
--
- p: Point
- health: int
- rect_outline: SDL_Rect
- fill_rect: SDL_Rect
--
+ HealthBar(float, float)
+ void Draw(SDL_Renderer* gRenderer): void
+ ~HealthBar()
+ set_point(float x, float y): void
+ decrease_health(): void
+ health_status(): int

bg=pink</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>250</x>
      <y>45</y>
      <w>160</w>
      <h>70</h>
    </coordinates>
    <panel_attributes>Person
--
- SDL_Rect spriteClips;
--
+ Person(LTexture*, float, float,double, string, int)
+ Person()
+ ~Person()
+ Move(): void
+ Render(long int&amp; frame, SDL_Renderer* gRenderer, bool debug):virtual void 
bg=pink</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>265</x>
      <y>275</y>
      <w>160</w>
      <h>55</h>
    </coordinates>
    <panel_attributes>SplashScreen
--
+ SplashScreen(LTexture* image1, int, int)
+ SplashScreen()
+ ~SplashScreen()
+ Render(long int&amp;, SDL_Renderer*, bool): void
bg=yellow</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>345</x>
      <y>210</y>
      <w>145</w>
      <h>50</h>
    </coordinates>
    <panel_attributes>:Motorcycle
--
- spriteClips: SDL_Rect
--
+ Motorcycle()
+ ~Motorcycle()
+ Motorcycle(LTexture* image, float x, float y,double angle, string color, int direction_motorcycle)
+ Move(): void
+ Render(long int&amp; frame, SDL_Renderer* gRenderer, bool debug):virtual void

bg=pink</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>385</x>
      <y>115</y>
      <w>115</w>
      <h>80</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;-</panel_attributes>
    <additional_attributes>40.0;130.0;10.0;140.0;10.0;10.0;210.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>550</x>
      <y>480</y>
      <w>130</w>
      <h>120</h>
    </coordinates>
    <panel_attributes>ImageLoad
--
+ ImageLoad()
+ ~ImageLoad()
+ gbackGround: LTexture
+ gSpriteSheetCar: LTexture
+ gSpriteSheetTruck: LTexture
+ gSpriteSheetMotorcycle: LTexture
+ gSpriteSheetAmbulance: LTexture
+ gSpriteSheetPerson: LTexture
+ gSpriteSheetTrafficSignal: LTexture
+ gSpriteSheetSplashScreen: LTexture
+ gSpriteSheetMainMenu: LTexture
+ gSpriteSheetOptions: LTexture
+ gSpriteSheetGameOver: LTexture
bg=magenta</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>420</x>
      <y>300</y>
      <w>25</w>
      <h>45</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>30.0;70.0;30.0;10.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>235</x>
      <y>90</y>
      <w>25</w>
      <h>85</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;150.0;10.0;10.0;30.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>525</x>
      <y>380</y>
      <w>215</w>
      <h>70</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;240.0;10.0;240.0;120.0;410.0;120.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>525</x>
      <y>320</y>
      <w>30</w>
      <h>50</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;80.0;30.0;80.0;30.0;10.0;40.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>30</x>
      <y>255</y>
      <w>715</w>
      <h>370</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;-
bg=black</panel_attributes>
    <additional_attributes>1410.0;60.0;1340.0;60.0;1340.0;720.0;10.0;720.0;10.0;10.0;90.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>25</x>
      <y>215</y>
      <w>720</w>
      <h>420</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;-
bg=black</panel_attributes>
    <additional_attributes>1420.0;260.0;1370.0;260.0;1370.0;820.0;10.0;820.0;10.0;10.0;310.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>435</x>
      <y>255</y>
      <w>310</w>
      <h>55</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;-
bg=black</panel_attributes>
    <additional_attributes>600.0;10.0;10.0;10.0;10.0;90.0;30.0;90.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>675</x>
      <y>155</y>
      <w>50</w>
      <h>375</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;730.0;40.0;730.0;40.0;10.0;80.0;10.0</additional_attributes>
  </element>
</diagram>
